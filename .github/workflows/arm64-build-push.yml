name: ARM64 Build and Push to GHCR
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          # This must match what's in versions.sh
          - '1.9'
          - '1.9.1'
          - '1.9.2'
          - '1.9.3'
          # - '1.10' # Not hosted
          - '1.10.1'
          - '1.10.2'
          - '1.11'
          - '1.11.1'
          - '1.12'
          - '1.12.1'
          - '2.0'
          - '2.1'
          - '2.1.1'
          - '2.2'
          - '2.2.1'
          - '2.2.2'
          - '2.2.3'
          - '2.2.4'
          - '2.3'
          - '2.3.1'
          - '2.3.2'
          - '2.3.3'
          - '2.3.4'
          - '2.3.5'
          - '2.3.6'
          - '2.3.7'
          - '2.4'
          - '2.5'
          # - '2.5.1' # Fibers is missing binaries
          # - '2.5.2' # Fibers is missing binaries
          # - '2.5.3' # Fibers is missing binaries
          # - '2.5.4' # Fibers is missing binaries
          # - '2.5.5' # Fibers is missing binaries
          - '2.5.6'
          - '2.5.7'
          - '2.5.8'
          - '2.6'
          - '2.6.1'
          - '2.7'
          - '2.7.1'
          - '2.7.2'
          - '2.7.3'
          - '2.8.0'
          - '2.8.1'
          - '2.9.0'
          - '2.9.1'
          - '2.10.0'
          - '2.11.0'
          - '2.12'
          - '2.13'
          - '2.13.1'
          - '2.13.3'
          - '2.14'
          - '2.15'
          - '2.16'
          - '3.0.1'
          - '3.0.2'
          - '3.0.3'
          - '3.0.4'
          - '3.1'
          - '3.1.1'
          - '3.1.2'
          - '3.2'
          - '3.3'
          - '3.3.1'
          - '3.3.2'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine if latest version
        id: check_latest
        run: |
          source ./versions.sh
          echo "latest_version=$latest_version" >> $GITHUB_OUTPUT
          if [ "${{ matrix.version }}" = "$latest_version" ]; then
            echo "is_latest=true" >> $GITHUB_OUTPUT
          else
            echo "is_latest=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image for ARM64
        uses: docker/build-push-action@v5
        with:
          context: ./src
          platforms: linux/arm64/v8
          push: true
          build-args: |
            METEOR_VERSION=${{ matrix.version }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/meteor-base:${{ matrix.version }}-arm64
            ${{ steps.check_latest.outputs.is_latest == 'true' && format('ghcr.io/{0}/meteor-base:latest-arm64', github.repository_owner) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
